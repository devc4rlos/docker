services:
  app-docker:
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    env_file:
      - ./.env
    volumes:
      - ./.env:/var/www/.env
      - code_data:/var/www
      - storage_data:/var/www/storage
    networks:
      - proxy
    healthcheck:
      test: [ "CMD", "cgi-fcgi", "-bind", "-connect", "127.0.0.1:9000" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  nginx-docker:
    image: nginx:stable-alpine
    restart: unless-stopped
    volumes:
      - code_data:/var/www:ro
      - storage_data:/var/www/storage:ro
      - ./docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      app-docker:
        condition: service_healthy
    networks:
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.middlewares.docker-redirect-https.redirectscheme.scheme=https"
      - "traefik.http.routers.docker-http.rule=Host(`docker.carlosalexandre.com.br`)"
      - "traefik.http.routers.docker-http.entrypoints=web"
      - "traefik.http.routers.docker-http.middlewares=docker-redirect-https"
      - "traefik.http.routers.docker-https.rule=Host(`docker.carlosalexandre.com.br`)"
      - "traefik.http.routers.docker-https.entrypoints=websecure"
      - "traefik.http.routers.docker-https.tls.certresolver=myresolver"
      - "traefik.http.routers.docker-http.service=docker-service"
      - "traefik.http.routers.docker-https.service=docker-service"
      - "traefik.http.services.docker-service.loadbalancer.server.port=80"

networks:
  proxy:
    external: true

volumes:
  code_data:
  storage_data:
    external: true
    name: docker_storage_data
